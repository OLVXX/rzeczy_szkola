#include <iostream>

// Funkcja do wyświetlania tablicy
void wyswietlTablice(int *tablica, int rozmiar) {
    std::cout << "Tablica: ";
    for (int i = 0; i < rozmiar; ++i) {
        std::cout << tablica[i] << " ";
    }
    std::cout << std::endl;
}

// Funkcja do zamiany liczb z jednej tablicy do drugiej
void zamienTablice(int *tablica1, int *tablica2, int rozmiar) {
    for (int i = 0; i < rozmiar; ++i) {
        // Zamiana miejscami w pamięci
        int temp = tablica1[i];
        tablica1[i] = tablica2[i];
        tablica2[i] = temp;
    }
}

int main() {
    int rozmiar;

    std::cout << "Podaj rozmiar tablicy: ";
    std::cin >> rozmiar;

    int *tablica1 = new int[rozmiar]; // Tworzenie pierwszej tablicy dynamicznej

    std::cout << "Podaj " << rozmiar << " liczb do pierwszej tablicy:" << std::endl;
    for (int i = 0; i < rozmiar; ++i) {
        std::cin >> tablica1[i];
    }

    int *tablica2 = new int[rozmiar]; // Tworzenie drugiej tablicy dynamicznej

    std::cout << "Podaj " << rozmiar << " liczb do drugiej tablicy:" << std::endl;
    for (int i = 0; i < rozmiar; ++i) {
        std::cin >> tablica2[i];
    }

    wyswietlTablice(tablica1, rozmiar); // Wyświetlanie tablicy przed zamianą
    wyswietlTablice(tablica2, rozmiar); // Wyświetlanie tablicy przed zamianą

    // Zapisanie adresów pamięci przed zamianą
    int *adresTablicy1Przed = tablica1;
    int *adresTablicy2Przed = tablica2;

    zamienTablice(tablica1, tablica2, rozmiar); // Zamiana liczb między tablicami

    wyswietlTablice(tablica1, rozmiar); // Wyświetlanie tablicy po zamianie
    wyswietlTablice(tablica2, rozmiar); // Wyświetlanie tablicy po zamianie

    // Porównanie adresów pamięci po zamianie
    if (adresTablicy1Przed == tablica2 && adresTablicy2Przed == tablica1) {
        std::cout << "Cyfry zamieniły się miejscami w pamięci." << std::endl;
    } else {
        std::cout << "Cyfry nie zamieniły się miejscami w pamięci." << std::endl;
    }

    delete[] tablica1; // Zwolnienie pamięci po pierwszej tablicy
    delete[] tablica2; // Zwolnienie pamięci po drugiej tablicy

    return 0;
}
